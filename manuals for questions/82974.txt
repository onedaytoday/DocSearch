CA A-MNL-NIOSPROG-01.1 Reference July
Reference Copyright Corporation. The Company, the and other and that as and/or service noted otherwise, the and service of Corporation the U.S. and other other or service the property of their respective of Graphics Corporation. protected U.S. and and rights, and copyrights. warrants performance of its products to with warranty, the right to to products and services without responsibility or of the or of information, or service as to writing Corporation. to the of relying published information and products or services. rights Corporation
Corporation This comprehensive information about the TM The or when to the or The CPU when to the of whole or that the architecture. Table below shows the reference history. Table Revision History Revision March Reference July PDF About this
About this to Table to Information Access USA Other Locations Services Non-technical Telephone SOS-EPLD service to Technical Telephone 800-EPLD to Telephone information You office or Corporation the information about products, to the information about products, the shown FTP World-wide to
Typographic Table with Initial Command titles, options, and options shown type directory and software shown type. MAX directory, chiptrip.gdf type titles shown type with with Initial shown type with AN (High-Speed type and shown type. and shown type. Initial and shown with the Subheading References to sections within and of II and MAX+PLUS II topics shown FLEX 10K or FLEX with the Download and shown lowercase type. type input. Active-low and of items when the of the items such as the of items when the of the items The that consists of only. The to information that The arrow should the The to information topic. Corporation The Reference the typographic shown that typed exactly as appears shown type. c:\max2work\tutorial\chiptrip.gdf Also, sections of such as to of the AHDL SUBDESIGN as as function TRI shown About this
Notes: Corporation
Introduction The TM CPU and system-on-a-programmable (SOPC) It RISC that with and (PLD). The CPU of CPU of on-chip ROM effective or the of hard-coded CPU with FLASH and memory CPU Corporation This reference software and creating the featuring the This with and assembly To become with the with the CPU, The CPU single-issue RISC which instructions clock The instruction The and CPU native-word of and respectively, the CPU native-word of while the CPU native-word of to to and to The family of includes and architecture Table CPU Architecture ALU Instruction (typical) (EP20K200E to to CPU CPU CPU
Instruction The instruction tailored to from C and C++. It includes of and operations, and instruction operations, flow and conditionally instructions, which branches. Corporation The CPU with the and from industry-standard C/C++ and The includes C/C++ and This section the of the CPU and The CPU architecture counter, and the instruction prefixing. The the CPU and the CPU. The and of or The software the that with This the This to of the The four sections as shown The lowest known as These with the or of the as The top the through the Table or or %L0-%L7 or or The top known as the %L0-%L7) as and the other known as (as SAVE instruction), the become the of the Also, the and of the become information.
SAVED %L7 %L6 %L5 %L4 %L3 STP/LDP (or %L2 STP/LDP (or %L1 STP/LDP (or %L0 STP/LDP (or C CLR_IE write (WRCTL) operation to this STATUS[15] (IE)=0. of read-operation (RCTL) SET_IE write (WRCTL) to this STATUS[15] (IE)=1. of read-operation (RCTL) WVALID HI_LIMIT LO_LIMIT ISTATUS STATUS IE IPRI CWP C Corporation REGISTER PC
IE IPRI CWP C Corporation The The and to every instruction PFX. PFX instruction directly from the IMM11 instruction field. instruction immediately following PFX. PFX instruction the two-instruction PFX CPU operation. Also, PFX instruction together SKP-type instructions. The directly software, indirectly. MOVI instruction, of of the This K-reading operation when the instruction PFX. The Counter The counter (PC) the of the currently instruction. Since instructions the of the PC The PC (PC PC instruction the PC explicitly The following instructions PC directly: BR, BSR, CALL, JMP, LRET, RET and TRET. The PC CPU and CPU. There that from the The RDCTL and WRCTL instructions the instructions that or write to these to STATUS
Corporation (IE) IE the IE=1, and internal IE=0 and Software TRAP instructions normally when IE=0. that IE directly without affecting the of the STATUS writing to the SET_IE and CLR_IE the CPU IE to Priority (IPRI) IPRI the priority. processed, the IPRI to the information. the IPRI directly from the TRAP instructions, the IPRI field directly from the IMM6 of the instruction. internal the IPRI field from the its internal than or to IPRI or IE=0. TRAP instruction unconditionally. the CPU IPRI to (lowest-priority). IPRI IPRI then and processed, others (CWP) CWP to the of the the Incrementing CWP the CWP the CWP SAVE instructions and incremented RESTORE instructions. Only software such as should directly write to CWP through WRCTL. Software normally CWP using SAVE and RESTORE instructions. the CPU CWP to the HI_LIMIT. This there the WVALID %ct12 to LO_LIMIT and HI_ LIMIT WVALID information.
Corporation Condition instructions the These the four least of the as shown Table Table Condition of or Arithmetic overflowset of from of with C Carry-out of borrow-out of subtraction ISTATUS ISTATUS the of the STATUS processed, the of the STATUS the ISTATUS This action allows the of the STATUS to to the information. return-from-trap (TRET) instruction the ISTATUS the STATUS (IE=0) when processed. the of the ISTATUS the CPU ISTATUS to WVALID WVALID HI_LIMIT and LOW_LIMIT. SAVE instruction CWP from LOW_LIMIT to LOW_LIMIT RESTORE instruction CWP from HI_LIMIT to HI_LIMIT overflow WVALID and read-only or read/write. the CPU LO_LIMIT to and HI_LIMIT to the highest HI_LIMIT LO_LIMIT
Memory Corporation CLR_IE(%ctl8) WRCTL to the CLR_IE clears the IE the STATUS (IE and the WRCTL RDCTL from CLR_IE SET_IE WRCTL to the SET_IE the IE the STATUS (IE and the WRCTL RDCTL from SET_IE The memory native-words. If the physical memory than the then the should to to the CPU. Peripherals their as native-word the the to than native-words. and Table of the CPU native-word Table Typical CPU Memory CPU) N-1
Reading from Memory of memory: ;Instructions CPU the LD the of with from Corporation Reading from Memory (or Peripherals) The CPU only memory operation only that of that of Instructions which from memory the CPU) or CPU) of the as Instructions extracting and from The instruction that reads from memory the LD instruction. typical of this instruction LD The first operand, the where loaded. The containing to from. This to the CPU) or CPU) the lowest CPU) or CPU) treated as they however, software than the The CPU instructions extracting and CPU) and CPU) from native-words. The instruction extracting and the instruction extracting typical of the instruction The instruction the lowest CPU) or CPU) of the to from the first operand, and the of the first with that The assembly-language shows to from memory, the of the word-aligned.
Corporation Writing to Memory (or Peripherals) The CPU writes to memory of or the CPU write CPU) written to that of instruction. written to that of instruction CPU) or instructions CPU). written to instructions. On the CPU, the lowest of written to that of the of written as that of and the CPU, the of written to and the high of written to The CPU write the of to that of four, and the high of to which of The ST instruction writes native-word to native-word memory from the and CPU only) instructions write and respectively, with the from software to write or to location memory. The within the to with the location memory to The FILL8 and FILL16 CPU only) instructions the lowest or respectively, of and
to MemoryAddress Native-word-aligned Instructions CPU the and that the FILL8 (First of the of to of memory Addressing Corporation shows to write to memory, the of the native-word-aligned. The topics this section includes of the following width register-indirect with offset with offset Immediate arithmetic and instructions as operand. The ADDI instruction, and from to To specify that from to from to the using the PFX instruction, This with the The PFX instruction directly the instruction To PFX and the the and the from to from and the from to from
The ADDI Instruction Used with/without PFX Corporation The following shows ADDI instruction both with and without PFX. the ADDI to PFX with of ADDI of to the and the of the ADDI instruction contained which together arithmetic and instructions, other instructions of widths, and the the the of each instruction the Instruction of its operation. Table shows instructions Table Instructions ADDI AND* ANDN* ASRI CMPI LSLI LSRI MOVI MOVHI OR* SUBI XOR* AND, ANDN, OR, and XOR These instructions PFX instruction.
Table Instructions Addressing Corporation The LD and ST instructions and respectively, to or from using another to specify the The first to native-word as the Memory Access section. The treated as from the native-word of the Instructions Instruction There instructions that To register-indirect instruction with instruction, EXT8s, CPU only) or CPU only). Several instructions write Each of these instructions and The within both the and the native-word of memory the of the of the within both the and the native-word of memory or to the instruction. with register-indirect the treated as offset from the native-word of the The width register-indirect instructions as the of to write. These instructions to with the FILL8 or FILL16 CPU only) instructions. Instruction Selection Immediate ST16s* Immediate of of CPU LD ST
Instructions with Corporation with The LDP, LDS, STP and STS instructions or to or from another to and to specify from that the LD and ST instructions, which to specify memory these instructions each their The LDP and STP instructions each only the %L0, %L1, %L2, or %L3 their The LDS and STS instructions only the to as their These instructions each that offset from the pointed the Instruction without PFX LDP %L0, %L1, %L2, %L3 native-words LDS native-words STP %L0, %L1, %L2, %L3 native-words STS native-words with There instructions that from memory. To width instruction with instruction, EXT8s, CPU only) or CPU only). The and only) to specify or half- offset, respectively, from the to write the correspondingly of the
Table Instructions with Addressing Corporation These instructions each the to as their and to the assembly instruction) as the These instructions to with the FILL8 or FILL16 CPU only) instructions. Instruction Selection STS16s* Immediate CPU The topics this section includes of the following: relative-branch instructions (BR and BSR) instructions (JMP and CALL) instructions (TRET and TRAP) instructions (SKP, SKP0, SKP1, and Relative-Branch Instructions There relative-branch instructions: BR and BSR. The branch computed from the the of the BR instruction and the IMM11 instruction field. of the branch-offset the of the BR and BSR instructions. BR and BSR BSR to BR that the of the the of the BSR instruction. Both BR and BSR Conditional branches BR or BSR with SKP-type instruction. Both BR and BSR instructions branch The instruction immediately following BR or BSR BR or BSR, the instruction the Branch information. The branch of the BR and BSR instructions bytes, or backwards to the of the BR or BSR instruction.
Corporation Instructions There (computed) instructions: JMP and CALL. The the of The and the PC. CALL to JMP that the of the the of the CALL instruction. Both JMP and CALL JMP or CALL with SKP-type instruction. Both JMP and CALL instructions branch The instruction immediately following JMP or CALL JMP or CALL, the instruction the The LRET instruction, which JMP to from Trap Instructions The instructions software processing: TRAP and TRET. TRAP and TRET of both these instructions. JMP and CALL, neither TRAP TRET branch The instruction immediately following TRAP the exception-handler The instruction immediately following TRET as of TRET's operation. Instructions There instructions SKP0, SKP1, and Each of these instructions assembler-alias (IFs, IF0, IF1, and respectively). of these instructions CPU-internal and then the instruction or the The operation of SKP-type instructions (and their the each the instruction fetched from memory of the the of the the instruction or While SKP and IF type instructions often to (JMP, CALL) and branch (BR, BSR) instructions, they to instruction. PFX instructions (PFX immediately or instruction) the instructions both or both PFX instruction as
The topics this section include of the following: Corporation internal and TRAP instructions Direct software (TRAP) and The allows to vectored or the IE the STATUS or selectively the IPRI field the STATUS from of three internal or software TRAP instructions. The exception-processing allows of internally That the the exception-handling subroutine with enough information to the of the as nothing SAVE or RESTORE instruction or overflow, respectively. Exception-handling allowing latency. The to manually the The of exception-handler On CPU each and CPU each bytes. The of the the CPU fetches the from the the fetched and then the the PC. The physically RAM or ROM, the memory of the ROM
Corporation Sources the CPU while asserting the CPU input The CPU the indicated the IE and the than (higher than) the the IPRI of the STATUS to the whose the inputs. the input and the input the SOPC software and included the peripheral PBM the CPU. peripheral or that combined within the PBM to the and inputs. The input The and the of each clock. that should assert their the acknowledged software writing the peripheral to that asserted and then asserted the CPU the Sources There of internal window-overflow and The architecture allows internally each the to the and as the exception-generating instruction succeeded. whenever the lowest (CWP LO_LIMIT) and SAVE instruction issued. The SAVE instruction CWP below LO_LIMIT and the of SAVE. which to exception-handling subroutine the instruction following SAVE
Corporation SAVE instruction CWP once to the The CWP LO_LIMIT The The CPU (IE=0) or the IPRI than or to The action the exception-handler subroutine the of the or the (and overflow) that the of the physical the might the of the to memory and CWP back HI_LIMIT, allowing to the other hand, might to tightly and subroutine call-depth. might that and the The the of and actions the The software (SDK) includes, and that the the as temporary SAVE instruction. Directly writing CWP WRCTL instruction) to than LO_LIMIT SAVE instruction when CWP already below LO_LIMIT Overflow whenever the highest (CWP HI_LIMIT) and RESTORE instruction issued. to exception-handling subroutine the instruction following RESTORE executed. the CWP HI_LIMIT. You think of CWP incremented the RESTORE instruction, then immediately as of processing. The
Corporation The action the overflow subroutine the of the or the overflow and that the of the physical such might the of the physical from the and CWP back LO_LIMIT. the other hand, might to tightly and subroutine might overflow that and the The the of and actions the The SDK which the the only RESTORE instruction. Directly writing CWP WRCTL instruction) to than HI_LIMIT RESTORE instruction when CWP already HI_LIMIT Direct Software (TRAP Software directly that to TRAP instruction. The IMM6 field of the instruction the TRAP instructions processed, of the of the IE or IPRI TRAP instructions The instruction immediately following TRAP to the indicated exception-handler. reference to the instruction following TRAP that TRET instruction back to the instruction following TRAP the of processing. Processing from of the the following The of the STATUS the ISTATUS CWP the exception-handler (This the where CWP already the SAVE instruction that caused the
Corporation IE to IPRI with the of the The of the instruction the The of the fetched from the and written the PC. the finishes TRET instruction issued to to the This the complexity and latency of they the freely the should SAVE instruction The of SAVE and RESTORE from within the to LO-LIMIT to that (The of LO_LIMIT Whenever SAVE instruction that then the (CWP The the (with CWP Correctly written software when CWP CWP when processed, and and information. Preservation: ISTATUS the STATUS the ISTATUS The STATUS then (IE to IPRI CWP The of the STATUS the ISTATUS to the the STATUS from ISTATUS the TRET instruction.
Corporation to there of ISTATUS or The of that or below. Nested explicitly and the of the ISTATUS and Return-Address of the temporarily suspended. The instruction the that preempted the instruction that executed, as the return-location processing. The return-location the to the The the of the instruction right-shifted This directly as the of TRET instruction without usually TRET instruction to to the and The architecture The accomplishes of the and overhead substantially aspects of Complex follow the following It It SAVE or RESTORE directly or that SAVE or RESTORE). It TRAP instructions (or that TRAP instructions). It the of or that these with ISTATUS or the concerned with CWP or
CPU Corporation Complex of the of allow and the of subroutines that SAVE and RESTORE). the following It the of ISTATUS ISTATUS the It CWP to CWP or LO_LIMIT. If CWP below LO_LIMIT, action to the to RAM), or It to the SAVE or RESTORE instructions or subroutines that SAVE or RESTORE instructions. to to the the of the ISTATUS including to CWP the shifted. to to the the of the This topics this section include of the following: CPU Exposed branch and CWP
Corporation The CPU RISC architecture. The from software branch and when CWP WRCTL write. The Instruction the CPU and the memory subsystem then the instruction the issued Instruction Fetch the fetched instruction If there they from the the BR and BSR instructions. the and to the ALU. The ALU then Write-back the ALU written back the when Branch branch as the instruction immediately BR, BSR, CALL, or JMP instruction. branch the branch instruction the instruction. Table branch BR instruction. Table BR Branch ADD BR ADD ADD ADD Branch
Corporation branch instruction instruction to the branch The of the would and Instruction instruction branch Instruction executed. instructions as branch those below: BR BSR CALL IF1 IF0 IFS JMP LRET PFX RET SKP1 SKP0 SKPS TRET TRAP Direct CWP Every WRCTL instruction that the STATUS NOP instruction.
Notation Notation Notation ~X NOT clarity) to instruction PFX, otherwise through of which the forced full-word truncation Corporation The right-shifted written with and the The RA One of the selected the a-field of the instruction RB One of the selected the of the instruction RP One of the (P-type) selected the p-field of the instruction OR the instruction The the (K OR PFX instruction) Bitwise-concatenation |X| The of X (X otherwise). (X) The memory, The of LSB) which the forced truncation C The C (carry) the STATUS One of the selected The field) within the X. X[7..0], X[15..8], X[23..16], and X[31..24] The field) within the X. X[15..0], X[31..16] AND The memory,
Instruction Format of RR Corporation IMM5 IMM4 IMM6 IMM8 IMM9 IMM10 IMM11
Instruction Format (Sheet of Corporation
Table Table of RA RA RB ADD RR affected: N, V, C, ADDI RA RA IMM5) affected: N, V, C, SUB RR RA RA RB affected: N, V, C, RA RA IMM5) SUBI affected: N, V, C, RA RB CMP RR affected: N, V, C, CMPI RA IMM5) affected: N, V, C, LSL RR RA (RA RB from right RA (RA IMM5), LSLI from right RA (RA RB LSR RR from LSRI RA (R IMM5), RA (RA RB ASR RR from with RA[31] RA (RA IMM5), ASRI from with RA[31] RA RB MOV RR MOVI RA IMM5) AND RR RA RA {RB, IMM5)} affected: N, RA RA ~({RB, IMM5)}) ANDN RR, affected: N, RA RA {RB, IMM5)} OR RR, affected: N, XOR RR, RA RA {RB, IMM5)} affected: N, RA IMM5 BGEN RA RA) where RB[1..0] RR SKP0 instruction (RA [IMM5] SKP1 instruction (RA [IMM5] LD RR RA RB (K) Corporation Format Summary
Table of RA RA) where RA RA) where (K) where (K) ST16s where CWP CWP SAVE If LO_LIMIT) {TRAP TRAP ISTATUS STATUS; IE CWP CWP IPRI ((PC PC [VECBASE RA ~RA NOT RA RA NEG RA |RA| ABS RA RA) SEXT8 RA RA) SEXT16 C (RA); RA (RA C RLC affected: C C RA[0]; RA C (RA RRC affected: C RA RA RA SWAP USR1 USR2 USR3 USR4 CWP CWP HI_LIMIT) {TRAP RESTORE PC (RA STATUS ISTATUS TRET Corporation Format Summary RB (K) RA ST RR IMM10)] where IMM10[1..0] IMM9 where IMM9[0] RA RA) where RB[1] RR RA (K IMM5), RA unaffected MOVHI USR0 RR
Table Table (Sheet of (K) where RA[1..0] (K) where RA[1] RA RA RA RA) FILL8 RA RA) FILL16 MSTEP then RA MUL RA instruction SKPS instruction WRCTL RA RDCTL RA instruction (RA PC (RA JMP R15 ((PC PC (RA CALL Corporation Format BR PC PC (IMM11) PC PC (IMM11) BSR ((PC IMM11 (K to instruction) PFX STP (K IMM5) RA RA (K IMM5) LDP (IMM8 RA STS RA (IMM8 LDS
Corporation The following (GNU and (GNU Table GNU Instruction Notes IF0 %rA,IMM5 SKP1 %rA,IMM5 IF1 %rA,IMM5 SKP0 %rA,IMM5 IFS SKPS IFS SKPS IFS SKPS IFS SKPS The following These with and and correctly the or the of of of of of LRET JMP LRET RET JMP RET NOP MOV NOP IFS SKPS IFS SKPS IFS SKPS IFS SKPS IFS SKPS IFS SKPS IFS SKPS IFS SKPS IFS SKPS IFS SKPS
Notes: Corporation
Corporation This section of the CPU instructions. The alphabetical to instruction Each instruction includes the following information: Instruction and of actions Condition Instruction Instruction The found the the instruction. Instruction Instruction
Instruction ABS Operation: RA |RA| ABS ABS the of RA; the RA. Condition Unaffected Instruction Format: Instruction of RA Corporation C
Operation: RA RA RB ADD ADD ADD to %L3 the of to and the A. Condition Instruction Format: RR Instruction of RA of RB Corporation C N: V: Signed-arithmetic Z: cleared otherwise C: Carry-out of Instruction ADD Without Carry Instruction
Instruction ADDI Immediate Operation: RA RA IMM5) ADDI %rA,IMM5 Not preceded PFX: ADDI %L5,6 to %L5 Preceded PFX: PFX ADDI ADD to Not PFX: to A, A. IMM5 the Preceded PFX: The from to the of the with IMM5 The (K IMM5) to and to A. Condition Instruction Format: Instruction of RA IMM5 IMM5 Corporation C N: V: Signed-arithmetic Z: cleared otherwise C: Carry-out of
Operation: Not PFX: RA RA RB Preceded PFX: RA RA IMM5) Not preceded PFX: AND Preceded PFX: PFX AND Not preceded PFX: AND Preceded PFX: PFX AND AND with PFX: Logically-AND the RA with the RB; the RA. Preceded PFX: the RB the of the with IMM5 This to with RA, and the written back RA. Condition Instruction Format: RR, Instruction of RA of RB IMM5 Not PFX (RR) Preceded PFX IMM5 Corporation C N: Z: cleared otherwise Instruction AND AND Instruction
Instruction ANDN AND NOT Operation: Not PFX: RA RA ~RB Preceded PFX: RA RA IMM5) Not preceded PFX: ANDN Preceded PFX: PFX ANDN Not PFX: ANDN Preceded PFX: PFX ANDN clear of Not PFX: Logically-AND the RA with the the ones- of RB; the RA. Preceded PFX: the RB the of the with IMM5 This to then and with RA. The written back RA. Condition Instruction Format: RR, Instruction of RA of RB IMM5 Not preceded PFX (RR) Preceded PFX IMM5 Corporation C N: Z: cleared otherwise
Operation: RA (RA RB[4..0]), from with RA[31] ASR ASR %L3 right Arithmetically right the RA the of RB; the RA. of RB If the RB[4..0] RA or the of RA. Condition Unaffected Instruction Format: RR Instruction of RA of RB Corporation C Instruction ASR Arithmetic Right Instruction
Instruction ASRI Arithmetic Right Immediate Operation: RA (RA IMM5), from with RA[31] ASRI %rA,IMM5 ASRI right Arithmetically right the of RA IMM5 If IMM5 RA or the of RA. Condition Unaffected Instruction Format: Instruction of RA IMM5 IMM5 Corporation C
Operation: RA IMM5 BGEN %rA,IMM5 BGEN to RA to power-of-two with the IMM5. This to RA, and clearing the Condition Unaffected Instruction Format: Instruction of RA IMM5 IMM5 Corporation C Instruction BGEN Instruction
Instruction BR Branch Operation: PC PC (IMM11) BR BR NOP The offset IMM11 as of (instructions) to the instruction immediately following BR. to instruction this Condition Unaffected The instruction immediately following BR BR, the instruction. There which instructions as to Branch Instruction Format: Instruction IMM11 IMM11 Corporation C
Operation: ((PC PC PC (IMM11) BSR BSR SendCharacter NOP The offset IMM11 as of (instructions) to the instruction immediately following BR. to instruction this offset. The the of the BSR instruction four, which the of the instruction. The shifted right and The right-shifted JMP without Condition Unaffected The instruction immediately following BSR BSR, the instruction. There which instructions as to Branch Instruction Format: Instruction IMM11 IMM11 Corporation C Instruction BSR Branch To Subroutine Instruction
Instruction CALL Subroutine Operation: ((PC PC (RA CALL CALL NOP The of RA shifted and PC. RA the of the subroutine right-shifted The the of the instruction. Return-address shifted right and The right-shifted JMP without Condition Unaffected The instruction immediately following CALL CALL, the instruction. There which instructions as to Branch Instruction Format: Instruction of RA Corporation C
Operation: RA RB CMP CMP the of RB from RA, and the the to the subtraction. Neither RA RB Condition Instruction Format: RR Instruction of RA of RB Corporation C N: V: Signed-arithmetic Z: cleared otherwise C: there borrow from the subtraction; cleared otherwise Instruction CMP Instruction
Instruction CMPI Operation: RA IMM5) CMPI %rA,IMM5 Not PFX: CMPI to Preceded PFX: PFX CMPI Not PFX: IMM5 from RA, and the the to the subtraction. RA Preceded PFX: The Immediate from to the of the with IMM5 The (K IMM5) to and subtracted from RA. Condition and the RA Condition Instruction Format: Instruction of RA IMM5 IMM5 Corporation C N: V: Signed-arithmetic overflow Z: cleared otherwise C: there borrow from the subtraction; cleared otherwise
RA RA) where RB[1] Operation: LD from int of the RA. The to-be-extracted chosen of RB. The selected written of RA, and the to Condition Unaffected Instruction Format: RR Instruction of RA of RB Corporation C Instruction Half-Word Instruction
Instruction Half-Word (Static) RA RA) where IMM1 Operation: %rA,IMM1 %L3,1 %L3 int of of the RA. The to-be-extracted chosen the IMM1. The selected written of RA, and the to Condition Unaffected Instruction Format: Instruction of RA IMM1 IMM1 Corporation C
RA RA) where RB[1..0] Operation: LD from the of the four RA. The to-be-extracted chosen of RB the of RA). The selected written of RA, and the to Condition Unaffected Instruction Format: RR Instruction of RA of RB Corporation C Instruction Instruction
Instruction (Static) RA RA) where IMM2 Operation: %rA,IMM2 the of of the four RA. The to-be-extracted chosen the IMM2 the of RA). The selected written of RA, and the to Condition Unaffected Instruction Format: Instruction of RA IMM2 IMM2 Corporation C
R0 RA RA) Operation: FILL16 FILL16 of first The least of RA both the allowed FILL instructions. Condition Unaffected Instruction Format: Instruction of RA Corporation C Instruction FILL16 Half-Word Instruction
Instruction FILL8 R0 RA RA RA RA) Operation: FILL8 FILL8 of first The of RA four byte-positions the allowed FILL instructions. Condition Unaffected Instruction Format: Instruction of RA Corporation C
(RA[IMM5] Operation: then PFX) then PC PC PC PC IF0 %rA,IMM5 IF0 of ADDI clear instruction the RA[IMM5] If the instruction PFX, then both PFX and the instruction following PFX together. Condition Unaffected Instruction Format: Instruction of RA IMM5 IMM5 Corporation C Instruction IF0 to SKP1 Instruction Instruction
Instruction IF1 to SKP0 Instruction (RA[IMM5] Operation: then PFX) then PC PC PC PC IF1 %rA,IMM5 ADDI include instruction the RA[IMM5] If the instruction PFX, then both PFX and the instruction following PFX together. Condition Unaffected Instruction Format: Instruction of RA IMM5 IMM5 Corporation C
(RA Operation: then PFX) then PC PC PC PC BSR SendIt NOP instruction RA to If the instruction PFX, then both PFX and the instruction following PFX together. Condition Unaffected Instruction Format: Instruction of RA Corporation C Instruction to Instruction Instruction
Instruction to Instruction (RA Operation: then PFX) then PC PC PC PC BSR NOP instruction RA If the instruction PFX, then both PFX and the instruction following PFX together. Condition Unaffected Instruction Format: Instruction of RA Corporation C
IMM4 Operation: then PFX) then PC PC PC PC IFS IFS BSR only NOP instruction specified If the instruction PFX, then both PFX and the instruction following PFX together. Condition These IFS and SKPS instructions. Instruction Format: Instruction IMM4 IMM4 Corporation Additional allowed: Conditionally Next Instruction C) (C) Z) (Z) N) (N) (N V) (N V)) (Not (Z or (N V))) (Z or (N V) (V) (C or Z)) (C or Z) Instruction IFS Instruction
Instruction JMP Computed PC (RA Operation: JMP JMP NOP to the (RA that the of RA. Condition Unaffected The instruction immediately following JMP JMP, the instruction. There which instructions as to Branch Instruction Format: Instruction of RA Corporation C
Operation: Not PFX: RA Preceded PFX: RA (K) LD Not PFX: LD Preceded PFX: PFX offset LD Not PFX: Loads from memory RA. from of RB (the of RB Preceded PFX: The and as word-scaled, offset. This offset to the RB and from the word-aligned Condition Unaffected Instruction Format: RR Instruction of RA of RB Corporation C Instruction LD From Memory Instruction
Instruction LDP From Memory Operation: Not PFX: RA (IMM5 Preceded PFX: RA (K IMM5) LDP %rA,[%rP,IMM5] Not preceded PFX: LDP from [%L2 of %L0, %L1, %L2, or %L3 Preceded PFX: PFX LDP from [%L2 Not PFX: Loads from memory RA. from of RP (the of RP word-scaled offset IMM5. Condition Unaffected Instruction Format: Instruction of RA IMM5 of IMM5 Corporation This instruction to LD, additionally allows offset to to of four instruction. The of the four %L0, %L1, %L2, or %L3. Preceded PFX: offset the with IMM5 The offset (K IMM5) to and to of RP to effective C
RA (IMM8 Operation: LDS %rA,[%sp,IMM8] LDS from only from memory RA. from of (the of word-scaled offset IMM8. Condition Unaffected Instruction Format: Instruction of RA IMM8 IMM8 Corporation Conventionally, software as stack-pointer. LDS allows single-instruction to known offset C From Memory Instruction LDS Instruction
Instruction LRET to JMP PC Operation: LRET LRET NOP to the that the of Condition Unaffected The instruction immediately following LRET LRET, the instruction. There which instructions as to Branch Instruction Format: Instruction Corporation C
RA (RA RB[4..0]), from right Operation: LSL LSL %L3 The RA shifted-left the of indicated RB of RB Condition Unaffected Instruction Format: RR Instruction of RA of RB Corporation C Instruction LSL Instruction
Instruction LSLI Immediate RA (RA IMM5), from right Operation: LSLI %rA,IMM5 LSLI The RA shifted-left the of indicated IMM5. Condition Unaffected Instruction Format: Instruction of RA IMM5 IMM5 Corporation C
RA (RA RB[4..0]), from Operation: LSR LSR %L3 right The RA shifted-right the of indicated RB RB[31..5] The from the Condition Unaffected Instruction Format: RR Instruction of RA of RB Corporation C Instruction LSR Right Instruction
Instruction LSRI Right Immediate RA (RA IMM5), from Operation: LSRI %rA,IMM5 LSRI Right-shift The RA shifted-right the of indicated IMM5. The with Condition Unaffected Instruction Format: Instruction of RA IMM5 IMM5 Corporation C
RA RB Operation: MOV MOV %L3 Copy the of RB to RA. Condition Unaffected Instruction Format: RR Instruction of RA of RB Corporation C Instruction MOV Instruction
Instruction MOVHI High Half-Word RA (K IMM5), RA Operation: MOVHI %rA,IMM5 Not PFX: MOVHI of Preceded PFX: PFX MOVHI of Not preceded PFX: Copy IMM5 to the of RA. The least unaffected. Preceded PFX: The from to the of the with IMM5 The (K IMM5) the of RA. The least unaffected. Condition Unaffected Instruction Format: Instruction of RA IMM5 IMM5 Corporation C
RA IMM5) Operation: MOVI %rA,IMM5 Not PFX: MOVI with Preceded PFX: PFX MOVI with Not preceded PFX: Loads RA with the IMM5. Preceded PFX: RA with the (K IMM5). Condition Unaffected Instruction Format: Instruction of RA IMM5 IMM5 Corporation C Instruction MOVI Instruction
Instruction MSTEP Multiply-Step If (R0[31] Operation: then R0 (R0 RA R0 (R0 MSTEP MSTEP of multiply. The and RA. RA affected. Condition Unaffected Instruction Format: Instruction of RA Corporation The following On entry, and the and respectively. The SWAP MSTEP MSTEP MSTEP of MSTEP C
Operation: R0 (R0 (RA MUL MUL the of and together, and the This of to or of to Condition Unaffected Instruction Format: Instruction of RA Corporation C Instruction MUL Instruction
Instruction NEG Arithmetic Negation RA RA Operation: NEG NEG the of RA. of RA. Condition Unaffected Instruction Format: Instruction of RA Corporation C
Operation: NOP NOP nothing operation. Condition Unaffected Instruction Format: RR Instruction Corporation C Instruction NOP to MOV Instruction
Instruction NOT Not RA ~RA Operation: NOT NOT the of RA. Condition Unaffected Instruction Format: Instruction of RA Corporation C
Operation: Not PFX: RA RA RB Preceded PFX: RA RA IMM5) Not PFX: OR Preceded PFX: PFX OR Not preceded PFX: OR OR Preceded PFX: PFX OR OR with Not PFX: Logically-OR the RA with the RB; the RA. Preceded PFX: the RB the of the with IMM5 This to then with RA. The written back RA. Condition Instruction Format: RR, Instruction of RA of RB IMM5 Not PFX (RR) Preceded PFX IMM5 Corporation C N: Z: cleared otherwise Instruction OR OR Instruction
Instruction PFX IMM11 (K to other instructions) Operation: PFX IMM11 PFX affects instruction the IMM11 the The the the instruction. to instruction other than PFX. The of PFX instructions Condition Unaffected Instruction Format: Instruction IMM11 IMM11 Corporation C
RA Operation: RDCTL Not PFX: RDCTL from STATUS Preceded PFX: PFX RDCTL Loads from WVALID Not PFX: RA with the of the STATUS Preceded PFX: Loads RA with the of the selected K. of and their indices. Condition Unaffected Instruction Format: Instruction of RA Corporation C Instruction RDCTL Instruction
Instruction RESTORE CWP CWP Operation: HI_LIMIT) then TRAP RESTORE RESTORE the CWP the If CWP to HI_LIMIT (from the WVALID the RESTORE instruction, then (TRAP Condition Unaffected Instruction Format: Instruction Corporation C
PC Operation: RET RET RESTORE to the that the of Condition Unaffected The instruction immediately following RET (RETs RET, the instruction. There which instructions as to Branch Instruction Format: Instruction Corporation C Instruction RET to JMP Instruction
Instruction RLC Through Carry C RA[31] Operation: RA (RA C RLC RLC Rotates the of RA through the Condition Instruction Format: Instruction of RA Corporation C C: of RA rotating
C RA[0] Operation: RA C (RA RRC RRC right the of RA right through the If Preceded PFX: Unaffected Condition Instruction Format: Instruction of RA Corporation C C: of RA rotating Instruction RRC Right Through Carry Instruction
Instruction SAVE CWP CWP Operation: (IMM8 If LO_LIMIT) then TRAP SAVE %sp,-IMM8 SAVE subroutine with first CWP the If CWP to LO_LIMIT (from the WVALID the SAVE instruction, then (TRAP Condition Unaffected Instruction Format: Instruction IMM8 IMM8 Corporation the with the of IMM8 the the as the (callers) SAVE conventionally to to of the subroutine and C
RA RA) Operation: SEXT16 SEXT16 to of RA with of RA. Condition Unaffected Instruction Format: Instruction of RA Corporation C Instruction SEXT16 Instruction
Instruction SEXT8 RA RA) Operation: SEXT8 SEXT8 to of RA with of RA. Condition Unaffected Instruction Format: Instruction of RA Corporation C
(RA[IMM5] Operation: then PFX) then PC PC PC PC SKP0 %rA,IMM5 ADDI include instruction the RA[IMM5] If the instruction PFX, then both PFX and the instruction following PFX together. Condition Unaffected Instruction Format: Instruction of RA IMM5 IMM5 Corporation C Instruction SKP0 If Instruction
Instruction SKP1 If (RA[IMM5] Operation: then PFX) then PC PC PC PC SKP1 %rA,IMM5 SKP1 of ADDI clear instruction the RA[IMM5] If the instruction PFX, then both PFX and the instruction following PFX together. Condition Unaffected Instruction Format: Instruction of RA IMM5 IMM5 Corporation C
(RA Operation: then PFX) then PC PC PC PC BSR NOP instruction RA If the instruction PFX, then both PFX and the instruction following PFX together. Condition Unaffected Instruction Format: Instruction of RA Corporation C Instruction If Not To Instruction
Instruction If (RA Operation: then PFX) then PC PC PC PC BSR NOP instruction RA to If the instruction PFX, then both PFX and the instruction following PFX together. Condition Unaffected Instruction Format: Instruction of RA Corporation C
IMM4 Operation: then PFX) then PC PC PC PC SKPS SKPS BSR clear NOP instruction specified If the instruction PFX, then both PFX and the instruction following PFX together. Condition These IFS and SKPS instructions. Instruction Format: Instruction IMM4 IMM4 Corporation Additional allowed: (C) C) (Z) Z) (N) N) (N V)) (N V) (Z or (N V)) (Not (Z or (N (V) V) (C or Z) (C or Z)) Instruction SKPS On Condition Instruction
Instruction ST To Memory Operation: Not PFX: RA Preceded PFX: (K) RA ST Not PFX: ST Preceded PFX: PFX offset ST to location preceded PFX: the RA to memory. written to of RB (the of RB Preceded PFX: The and as word-scaled, This offset to the RB and written to the word-aligned Condition Unaffected Instruction Format: RR Instruction of RA of RB Corporation C
Operation: PFX R0 where RA[1] Preceded PFX: (K) R0 where RA[1] Not preceded PFX: FILL16 of %o3[1]th int from to Preceded PFX: FILL16 PFX as offset memory Not PFX: of the of to memory the half-word-aligned RA. The RA[1] selects which the RA[0] Condition Unaffected Instruction Format: Instruction of RA Corporation To Memory (Computed Half-Word with FILL16 to two-instruction operation. of the following writes this to memory the half-word-aligned RA: FILL16 Preceded PFX: The and as word-scaled, This offset to the RA and written to the C Instruction Instruction
Instruction ST16s To Memory (Static Half-Word-Offset Operation: Not PFX: R0 where IMM1 Preceded PFX: (K) R0 where IMM1 ST16s Not PFX: of the of to memory the half-word-aligned (RA[31..2] IMM1 The RA[1..0] IMM2 selects which of Condition Unaffected Instruction Format: Instruction of RA IMM1 IMM1 Corporation with FILL16 to to half-word-offset from word-aligned base-address. half- of the following writes this half- to memory the half-word-aligned (RA (RA to word-aligned FILL16 PFX Preceded PFX: half-word-scaled offset with IMM1.This offset (K IMM1) half-word-scaled to and as the half-word-offset the ST-operation. C
Not preceded PFX: Operation: R0 where RA[1..0] Preceded PFX: (K) R0 where RA[1..0] Not PFX: FILL8 of %o3[1..0]th from to only Preceded PFX: FILL8 PFX as offset memory Not PFX: of the four of to memory the RA. The RA[1..0] which the Condition Unaffected Instruction Format: Instruction of RA Corporation with FILL8 to two-instruction operation. of the following writes this to memory the RA: FILL8 Preceded PFX: The and as word-scaled, This offset to the RA and written to the C To Memory (Computed Address) Instruction Instruction
Instruction To Memory (Static Address) Operation: preceded PFX: R0 where IMM2 Preceded PFX: (K) R0 where IMM2 Not PFX: MOVI high of to Preceded PFX: PFX of to Not PFX: of the four of to memory the (RA[31..2] IMM2). The RA[1..0] IMM2 selects which of Condition Unaffected Instruction Format: Instruction of RA IMM2 IMM2 Corporation ST8s with FILL8 to operation to byte-offset from word-aligned of the following writes this to memory the (RA (RA to word-aligned FILL8 PFX Preceded PFX: byte-scaled offset with IMM2. This offset (K IMM2) to and as the byte-offset the ST-operation. C
Operation: Not PFX: (IMM5 RA Preceded PFX: (K IMM5) RA STP [%rP,IMM5],%rA Not preceded PFX: STP to location [%L2 Preceded PFX: PFX STP to location [%L2 Not preceded PFX: the RA to memory. written to of RP (the of RP word-scaled offset IMM5. Condition Unaffected Instruction Format: Instruction of RA IMM5 of IMM5 Corporation This instruction to ST, allows offset to to of four instruction. The of the four %L0, %L1, %L2, or %L3. Preceded PFX: offset the with IMM5 The offset (K IMM5) to four, and to of RP to word-aligned effective C To Memory Instruction STP Instruction
Instruction STS To Memory Addressing (IMM8 RA Operation: STS [%sp,IMM8],%rA STS first the RA to memory. written to word-aligned of (the of word-scaled offset IMM8. Condition Unaffected Instruction Format: Instruction RA IMM8 IMM8 Corporation Conventionally, software as stack-pointer. STS allows single-instruction to known offset C
IMM9 R0 where IMM9[0] Operation: only and of the of to memory the half-word-aligned IMM9 The of IMM9 selects which of Condition Unaffected Instruction Format: Instruction IMM9 IMM9 Corporation with FILL16 to to offset from the stack-pointer of the following writes this to memory the half-word-offset from to word-aligned FILL16 C To Memory Instruction Instruction
Instruction To Memory IMM10)] R0 where IMM10[1..0] Operation: and of the four of to memory the IMM10). The of IMM10 selects which of Condition Unaffected Instruction Format: Instruction IMM10 IMM10 Corporation with FILL8 to operation to byte-offset from the stack-pointer of the following writes this to memory the byte-offset from to FILL8 C
RA RA RB Operation: SUB SUB SUB from Subtracts the of RB from RA, RA. Condition Instruction Format: RR Instruction of RA of RB Corporation C N: V: Signed-arithmetic Z: cleared otherwise C: there borrow from the subtraction; cleared otherwise Instruction SUB Instruction
Instruction SUBI Immediate Operation: RA RA IMM5) %rB,IMM5 PFX: SUBI %L5,6 from %L5 Preceded PFX: PFX SUBI from Not PFX: Subtracts the from the of RA. The the of Preceded PFX: The Immediate from to the of the with IMM5 The (K IMM5) to and subtracted from A. Condition Instruction Format: Instruction of RA IMM5 IMM5 Corporation C N: V: Signed-arithmetic Z: cleared otherwise C: there borrow from the subtraction; cleared otherwise
RA RA RA Operation: SWAP SWAP of the RA. Writes back RA. Condition Unaffected Instruction Format: Instruction of RA Corporation C Instruction SWAP Half-Words Instruction
Instruction TRAP Trap Operation: ISTATUS STATUS IE CWP CWP IPRI IMM6 ((PC PC (IMM6 TRAP IMM6 TRAP the CWP the (IE The STATUS the ISTATUS Condition Unaffected TRAP The instruction immediately following TRAP the The TRET to the instruction immediately following TRAP. Instruction Format: Instruction IMM6 IMM6 Corporation to IMM6. The of the from the which the memory VECBASE (VECBASE fetched from the word-aligned (VECBASE IMM6 The fetched and PC. The of the instruction immediately following the TRAP instruction The as TRET without The TRAP than BSR/CALL, TRAP TRAP instruction to the indicated the IE the STATUS C
Operation: PC (RA STATUS ISTATUS TRET TRET from TRAP to the (RA The written TRAP as without Condition Unaffected Instruction Format: Instruction of RA Corporation The ISTATUS the STATUS (this the TRAP CWP of STATUS). C Instruction TRET Trap Instruction
Instruction WRCTL Operation: CTLk RA Assembler WRCTL PFX: WRCTL writes to STATUS NOP Preceded PFX: PFX WRCTL writes to ISTATUS Not PFX: Loads the STATUS with RA. WRTCL to STATUS NOP instruction. Preceded PFX: Writes the RA to the selected K. the of the and their indices. Condition If the of WRCTL the STATUS then the directly the WRCTL from RA[3..0]. other WRCTL the unaffected. Instruction Format: Instruction of RA Corporation
Operation: Not PFX: RA RA RB Preceded PFX: RA RA IMM5) Not preceded PFX: XOR Preceded PFX: PFX XOR Not PFX: XOR XOR Preceded PFX: PFX XOR XOR with Not PFX: Logically-exclusive-OR the RA with the RB; the RA. Preceded PFX: the RB the of the with IMM5 This to then bitwise-exclusive-ORed with RA. The written back RA. Condition Instruction Format: RR, Instruction of RA of RB IMM5 PFX (RR) Preceded PFX IMM5 Corporation C N: Z: cleared otherwise Instruction XOR OR Instruction
Notes: Corporation